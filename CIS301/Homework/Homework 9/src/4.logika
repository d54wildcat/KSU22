//HW 9
//4.logika

import org.sireum.logika._

val input: Z = readInt("Enter a positive number.")
var test: Z = input
    //1) Gets a positive number from the user
    //2) Makes an answer variable equal to four times the input number
assume(test > 0)
test = test * 4
l"""{
    1. test == test_old * 4  premise
    2. test_old == input     premise
    3. test == input * 4     subst1 2 1
}"""
 //3) Adds two times the original input number onto the answer variable
test = test + 2 * input
l"""{
    1. test == test_old + (2 * input)           premise
    2. test_old == input * 4                    premise
    3. test == input * 4 + (2 * input)         subst1 2 1
    4. test == input * 6                        algebra 3
    5. 3 != 0                                  algebra
}"""
//4) Divides the answer variable by 3
test = test/ 3
l"""{
    1. test = test_old / 3                      premise
    2. test_old == input * 6                    premise
    3. test == input * 6 / 3                    subst1 2 1
    4. test == input * 2                        algebra 3
    5. 2 != 0                                  algebra
}"""
//5) Divides the answer variable by 2
test = test/2
l"""{
    1. test = test_old / 2                      premise
    2. test_old == input * 2                    premise
    3. test == input * 2 / 2                    subst1 2 1
    4. test == input                            algebra 3
}"""

//FIRST, write a program that does the following, where each step is done one a separate line (or lines):
    //For example, if the user input is 11:
        //answer = 4 * input = 4 * 11 = 44
        //Adds two times the original input number onto the answer variable, so answer = 44 + 2*11 = 66
        //Divides the answer variable by 3, so answer = 66/3 = 22
        //Divides the answer variable by 2, so answer = 22/2 = 11

    //Look at the previous example files to see the syntax for writing a Logika program

//NEXT, add an assert statement at the bottom asserting that your final answer equals
//the original user input number

//FINALLY, add appropriate assume/logic blocks so that your assert at the end is verified